// frontend/api/send-confirmation-email.js - VERSI√ìN SIMPLIFICADA
const nodemailer = require('nodemailer');

exports.handler = async (event, context) => {
  console.log('üéØ FUNCI√ìN INICIADA - Vercel');
  
  if (event.httpMethod !== 'POST') {
    return { statusCode: 405, body: JSON.stringify({ error: 'Method Not Allowed' }) };
  }

  const headers = {
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*',
    'Access-Control-Allow-Headers': 'Content-Type',
    'Access-Control-Allow-Methods': 'POST, OPTIONS'
  };

  if (event.httpMethod === 'OPTIONS') {
    return { statusCode: 200, headers, body: '' };
  }

  try {
    console.log('üîç Verificando variables de entorno...');
    console.log('üîç GMAIL_USER:', process.env.GMAIL_USER ? '‚úÖ' : '‚ùå');
    
    if (!process.env.GMAIL_USER || !process.env.GMAIL_PASS) {
      throw new Error('Variables de entorno no configuradas');
    }

    const body = JSON.parse(event.body);
    console.log('üìß Procesando email para:', body.to);

    // CONFIGURACI√ìN B√ÅSICA
    const transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: process.env.GMAIL_USER,
        pass: process.env.GMAIL_PASS
      }
    });

    // VERIFICAR CONEXI√ìN
    await transporter.verify();
    console.log('‚úÖ Conexi√≥n con Gmail exitosa');

    // EMAIL SIMPLE SIN QRs (por ahora)
    const emailHtml = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: #10B981; color: white; padding: 30px; text-align: center;">
          <h1 style="margin: 0;">üéâ ¬°Compra Confirmada!</h1>
          <h2 style="margin: 10px 0 0 0; font-weight: normal;">${body.eventName}</h2>
        </div>
        
        <div style="padding: 30px;">
          <h2>Hola ${body.customerName},</h2>
          <p>Tu compra ha sido procesada exitosamente.</p>
          
          <div style="background: white; border-left: 4px solid #10B981; padding: 20px; margin: 20px 0;">
            <h3 style="color: #10B981; margin-top: 0;">üìã Informaci√≥n</h3>
            <p><strong>Orden:</strong> ${body.orderId}</p>
            <p><strong>Evento:</strong> ${body.eventName}</p>
            <p><strong>Total:</strong> $${body.totalPrice}</p>
          </div>

          <div style="background: #f8fffb; border: 2px solid #10B981; padding: 20px; border-radius: 10px;">
            <h3 style="color: #10B981; text-align: center;">üé´ Tus Tickets</h3>
            <p style="text-align: center;">Los c√≥digos QR est√°n disponibles en tu p√°gina de confirmaci√≥n:</p>
            <p style="text-align: center;">
              <a href="https://tickets-cyan-nu.vercel.app/#/confirmacion/${body.eventId}" 
                 style="background: #10B981; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block;">
                Ver Mis Tickets con QR
              </a>
            </p>
          </div>
        </div>
      </div>
    `;

    const mailOptions = {
      from: `Piramide Tickets <${process.env.GMAIL_USER}>`,
      to: body.to,
      subject: `‚úÖ Confirmaci√≥n - ${body.eventName}`,
      html: emailHtml
    };

    console.log('üì§ Enviando email...');
    const result = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Email enviado:', result.messageId);

    return {
      statusCode: 200,
      headers,
      body: JSON.stringify({ 
        success: true, 
        message: 'Email enviado correctamente'
      })
    };

  } catch (error) {
    console.error('‚ùå ERROR:', error.message);
    return {
      statusCode: 500,
      headers,
      body: JSON.stringify({ 
        success: false, 
        error: error.message
      })
    };
  }
};